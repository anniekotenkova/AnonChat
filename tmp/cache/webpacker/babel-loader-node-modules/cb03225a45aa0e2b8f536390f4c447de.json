{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/SMBD3/app/javascript/chat/containers/message_form.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createMessage } from '../actions/index';\nimport Picker from 'emoji-picker-react';\n\nvar MessageForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageForm, _Component);\n\n  function MessageForm(props) {\n    var _this;\n\n    _classCallCheck(this, MessageForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageForm).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.createMessage(_this.props.selectedChannel, _this.state.value);\n\n      _this.setState({\n        value: ''\n      }); // Reset message input\n\n    };\n\n    _this.state = {\n      value: ''\n    };\n    _this.state = {\n      showMenu: true\n    };\n    return _this;\n  }\n\n  _createClass(MessageForm, [{\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      this.state.showMenu = !this.state.showMenu; //Flips true/false\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.messageBox.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"MessageInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(input) {\n          _this2.messageBox = input;\n        },\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        className: \" channel-editor form-control\",\n        autoComplete: \"off\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MessageForm;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createMessage: createMessage\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(MessageForm);","map":{"version":3,"sources":["/Users/kotya/SMBD3/app/javascript/chat/containers/message_form.jsx"],"names":["React","Component","bindActionCreators","connect","createMessage","Picker","MessageForm","props","handleChange","event","setState","value","target","handleSubmit","preventDefault","selectedChannel","state","showMenu","messageBox","focus","input","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UAcnBC,YAdmB,GAcJ,UAACC,KAAD,EAAW;AACxB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAAtB,OAAd;AACD,KAhBkB;;AAAA,UAkBnBE,YAlBmB,GAkBJ,UAACJ,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;;AACA,YAAKP,KAAL,CAAWH,aAAX,CAAyB,MAAKG,KAAL,CAAWQ,eAApC,EAAqD,MAAKC,KAAL,CAAWL,KAAhE;;AACA,YAAKD,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd,EAHwB,CAGM;;AAC/B,KAtBkB;;AAEjB,UAAKK,KAAL,GAAa;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,UAAKK,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAHiB;AAIlB;;;;iCAEY;AACX,WAAKD,KAAL,CAAWC,QAAX,GAAsB,CAAC,KAAKD,KAAL,CAAWC,QAAlC,CADW,CACgC;AAC5C;;;wCAEmB;AAClB,WAAKC,UAAL,CAAgBC,KAAhB;AACD;;;6BAeQ;AAAA;;AACP,aAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAE,aAACO,KAAD,EAAW;AAAE,UAAA,MAAI,CAACF,UAAL,GAAkBE,KAAlB;AAA0B,SAD9C;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,yGAHd;AAIE,QAAA,SAAS,EAAC,8BAJZ;AAKE,QAAA,YAAY,EAAC,KALf;AAME,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWL,KANpB;AAOE,QAAA,QAAQ,EAAE,KAAKH,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF,CAFF;AAmBD;;;;EAhDuBP,S;;AAmD1B,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOpB,kBAAkB,CAAC;AAAEE,IAAAA,aAAa,EAAbA;AAAF,GAAD,EAAoBkB,QAApB,CAAzB;AACD;;AAED,eAAenB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCf,WAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createMessage } from '../actions/index';\nimport Picker from 'emoji-picker-react';\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n    this.state = { showMenu: true };\n  }\n\n  toggleMenu() {\n    this.state.showMenu = !this.state.showMenu //Flips true/false\n  }\n\n  componentDidMount() {\n    this.messageBox.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.createMessage(this.props.selectedChannel, this.state.value);\n    this.setState({ value: '' }); // Reset message input\n  }\n\n\n\n\n  render() {\n    return (\n\n      <div className=\"MessageInput\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"inputForm\">\n            <input\n              ref={(input) => { this.messageBox = input; }}\n              type=\"text\"\n              placeholder=\"Написать сообщение\"\n              className=\" channel-editor form-control\"\n              autoComplete=\"off\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <button type=\"submit\"></button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ createMessage }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(MessageForm);\n"]},"metadata":{},"sourceType":"module"}