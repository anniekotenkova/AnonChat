{"ast":null,"code":"var _jsxFileName = \"/Users/kotya/SMBD3/app/javascript/chat/containers/countdown.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React from 'react';\nexport var CountDown = function CountDown(_ref) {\n  var _ref$hours = _ref.hours,\n      hours = _ref$hours === void 0 ? 0 : _ref$hours,\n      _ref$minutes = _ref.minutes,\n      minutes = _ref$minutes === void 0 ? 0 : _ref$minutes,\n      _ref$seconds = _ref.seconds,\n      seconds = _ref$seconds === void 0 ? 0 : _ref$seconds;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      paused = _React$useState2[0],\n      setPaused = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      over = _React$useState4[0],\n      setOver = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    hours: parseInt(hours),\n    minutes: parseInt(minutes),\n    seconds: parseInt(seconds)\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      time = _React$useState6[0],\n      setTime = _React$useState6[1];\n\n  var tick = function tick() {\n    if (paused || over) return;\n    if (time.hours === 0 && time.minutes === 0 && time.seconds === 0) setOver(true);else if (time.minutes === 0 && time.seconds === 0) setTime({\n      hours: time.hours - 1,\n      minutes: 59,\n      seconds: 59\n    });else if (time.seconds === 0) setTime({\n      minutes: time.minutes - 1,\n      seconds: 59\n    });else setTime({\n      minutes: time.minutes,\n      seconds: time.seconds - 1\n    });\n  };\n\n  var reset = function reset() {\n    setTime({\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds)\n    });\n    setPaused(false);\n    setOver(false);\n  };\n\n  React.useEffect(function () {\n    var timerID = setInterval(function () {\n      return tick();\n    }, 1000);\n    return function () {\n      return clearInterval(timerID);\n    };\n  });\n  return React.createElement(\"div\", {\n    className: \"timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"identifyEmoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(GenerateEmoji, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"countdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"\".concat(time.minutes.toString().padStart(2, '0'), \":\").concat(time.seconds.toString().padStart(2, '0'))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, over ? \"Время вышло!\" : ''), React.createElement(\"p\", {\n    className: \"sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C\")));\n};","map":{"version":3,"sources":["/Users/kotya/SMBD3/app/javascript/chat/containers/countdown.js"],"names":["React","CountDown","hours","minutes","seconds","useState","paused","setPaused","over","setOver","parseInt","time","setTime","tick","reset","useEffect","timerID","setInterval","clearInterval","toString","padStart"],"mappings":"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","sourcesContent":["import React from 'react'\n\nexport const CountDown = ({ hours = 0, minutes = 0, seconds = 0 }) => {\n  const [paused, setPaused] = React.useState(false);\n  const [over, setOver] = React.useState(false);\n  const [time, setTime] = React.useState({\n    hours: parseInt(hours),\n    minutes: parseInt(minutes),\n    seconds: parseInt(seconds)\n  });\n\n  const tick = () => {\n    if (paused || over) return;\n    if (time.hours === 0 && time.minutes === 0 && time.seconds === 0) setOver(true);\n    else if (time.minutes === 0 && time.seconds === 0)\n      setTime({\n        hours: time.hours - 1,\n        minutes: 59,\n        seconds: 59\n      });\n    else if (time.seconds === 0)\n      setTime({\n\n        minutes: time.minutes - 1,\n        seconds: 59\n      });\n    else\n      setTime({\n\n        minutes: time.minutes,\n        seconds: time.seconds - 1\n      });\n  };\n\n  const reset = () => {\n    setTime({\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds)\n    });\n    setPaused(false);\n    setOver(false);\n  };\n\n  React.useEffect(() => {\n    let timerID = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerID);\n  });\n\n  return (\n    <div className=\"timer\">\n      <div className=\"identifyEmoji\"><GenerateEmoji /></div>\n      <div className=\"countdown\">\n        <p className=\"time\">{`${time.minutes\n          .toString()\n          .padStart(2, '0')}:${time.seconds.toString().padStart(2, '0')}`}</p>\n        <div>{over ? \"Время вышло!\" : ''}</div>\n        <p className=\"sign\">Осталось</p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}