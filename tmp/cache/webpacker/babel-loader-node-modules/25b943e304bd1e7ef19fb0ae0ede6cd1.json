{"ast":null,"code":"var Utils = {\n  getNiceDate: function getNiceDate(created_at) {\n    var defaultString = '%d %f%y at %h:%i';\n    var language = {\n      0: 'Сейчас',\n      1: '1 минуту назад',\n      59: '%distance минут назад',\n      118: 'Час назад',\n      1439: '%r часов назад',\n      2879: 'Вчера в %h:%i',\n      14567: '%l в %h:%i'\n    };\n    var days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\n    var months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n    var date = new Date(created_at);\n    var distance = Math.round((+new Date() - created_at) / 60000);\n    var string;\n\n    for (var i in language) {\n      if (distance < i) {\n        string = language[i];\n        break;\n      }\n    }\n\n    var hour = \"0\".concat(date.getHours()).slice(-2);\n    var minutes = \"0\".concat(date.getMinutes()).slice(-2);\n    var day = days[date.getDay()];\n    var month = months[date.getMonth()];\n    var year = date.getFullYear();\n\n    if (new Date().getFullYear() === year) {\n      year = '';\n    }\n\n    if (string) {\n      var hoursAgo = Math.round(distance / 60);\n      return string.replace(/%distance/i, distance).replace(/%r/i, hoursAgo).replace(/%h/i, hour).replace(/%i/i, minutes).replace(/%l/i, day);\n    }\n\n    return defaultString.replace(/%d/i, day).replace(/%f/i, month).replace(/%y/i, year).replace(/%h/i, hour).replace(/%i/i, minutes);\n  },\n  getShortDate: function getShortDate(created_at) {\n    var distance = Math.round((+new Date() - created_at) / 60000);\n    var date = new Date(created_at);\n    var hour = \"0\".concat(date.getHours()).slice(-2);\n    var minutes = \"0\".concat(date.getMinutes()).slice(-2);\n\n    if (distance > 2879) {\n      if (distance > 14567) {\n        return this.getNiceDate(created_at);\n      } else {\n        return \"\\u0412\\u0447\\u0435\\u0440\\u0430 \\u0432 \".concat(hour, \":\").concat(minutes);\n      }\n    } else {\n      return \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F \\u0432 \".concat(hour, \":\").concat(minutes);\n    }\n  }\n};\nexport default Utils;","map":{"version":3,"sources":["/Users/kotya/SMBD3/app/javascript/chat/components/utils.js"],"names":["Utils","getNiceDate","created_at","defaultString","language","days","months","date","Date","distance","Math","round","string","i","hour","getHours","slice","minutes","getMinutes","day","getDay","month","getMonth","year","getFullYear","hoursAgo","replace","getShortDate"],"mappings":"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","sourcesContent":["const Utils = {\n  getNiceDate(created_at) {\n  const defaultString = '%d %f%y at %h:%i'\n\n  const language = {\n    0: 'Сейчас',\n    1: '1 минуту назад',\n    59: '%distance минут назад',\n    118: 'Час назад',\n    1439: '%r часов назад',\n    2879: 'Вчера в %h:%i',\n    14567: '%l в %h:%i',\n  }\n  const days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\n  const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n  const date = new Date(created_at)\n  const distance = Math.round((+new Date() - created_at) / 60000)\n\n  let string\n  for (const i in language) {\n    if (distance < i) {\n      string = language[i]\n\n      break\n    }\n  }\n\n  const hour = (`0${date.getHours()}`).slice(-2)\n  const minutes = (`0${date.getMinutes()}`).slice(-2)\n  const day = days[date.getDay()]\n  const month = months[date.getMonth()]\n\n  let year = date.getFullYear()\n  if (new Date().getFullYear() === year) {\n    year = ''\n  }\n\n  if (string) {\n    const hoursAgo = Math.round(distance / 60)\n\n    return string.replace(/%distance/i, distance)\n      .replace(/%r/i, hoursAgo)\n      .replace(/%h/i, hour)\n      .replace(/%i/i, minutes)\n      .replace(/%l/i, day)\n  }\n\n  return defaultString.replace(/%d/i, day)\n    .replace(/%f/i, month)\n    .replace(/%y/i, year)\n    .replace(/%h/i, hour)\n    .replace(/%i/i, minutes)\n},\n  getShortDate(created_at) {\n    const distance = Math.round((+new Date() - created_at) / 60000)\n    const date = new Date(created_at)\n\n    const hour = (`0${date.getHours()}`).slice(-2)\n    const minutes = (`0${date.getMinutes()}`).slice(-2)\n\n    if (distance > 2879) {\n      if (distance > 14567) {\n        return this.getNiceDate(created_at)\n      } else {\n        return `Вчера в ${hour}:${minutes}`\n      }\n    } else {\n      return `Сегодня в ${hour}:${minutes}`\n    }\n  },\n\n}\n\nexport default Utils\n"]},"metadata":{},"sourceType":"module"}