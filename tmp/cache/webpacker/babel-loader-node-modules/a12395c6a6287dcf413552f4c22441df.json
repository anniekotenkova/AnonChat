{"ast":null,"code":"var Utils = {\n  getShortDate: function getShortDate(timestamp) {\n    var distance = Math.round((+new Date() - timestamp) / 60000);\n    var date = new Date(timestamp);\n    var hour = \"0\".concat(date.getHours()).slice(-2);\n    var minutes = \"0\".concat(date.getMinutes()).slice(-2);\n\n    if (distance > 2879) {\n      if (distance > 14567) {\n        return this.getNiceDate(timestamp);\n      } else {\n        return \"Yesterday at \".concat(hour, \":\").concat(minutes);\n      }\n    } else {\n      return \"at \".concat(hour, \":\").concat(minutes);\n    }\n  },\n  getNiceDate: function getNiceDate(timestamp) {\n    var defaultString = '%d %f%y at %h:%i';\n    var language = {\n      0: 'less than a minute ago',\n      1: '1 minute ago',\n      59: '%distance minutes ago',\n      118: 'an hour ago',\n      1439: '%r hours ago',\n      2879: 'Yesterday at %h:%i',\n      14567: '%l at %h:%i'\n    };\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var date = new Date(timestamp);\n    var distance = Math.round((+new Date() - timestamp) / 60000);\n    var string;\n\n    for (var i in language) {\n      if (distance < i) {\n        string = language[i];\n        break;\n      }\n    }\n\n    var hour = \"0\".concat(date.getHours()).slice(-2);\n    var minutes = \"0\".concat(date.getMinutes()).slice(-2);\n    var day = days[date.getDay()];\n    var month = months[date.getMonth()];\n    var year = date.getFullYear();\n\n    if (new Date().getFullYear() === year) {\n      year = '';\n    }\n\n    if (string) {\n      var hoursAgo = Math.round(distance / 60);\n      return string.replace(/%distance/i, distance).replace(/%r/i, hoursAgo).replace(/%h/i, hour).replace(/%i/i, minutes).replace(/%l/i, day);\n    }\n\n    return defaultString.replace(/%d/i, day).replace(/%f/i, month).replace(/%y/i, year).replace(/%h/i, hour).replace(/%i/i, minutes);\n  }\n};\nexport default Utils;","map":{"version":3,"sources":["/Users/kotya/SMBD3/app/javascript/chat/components/utils.js"],"names":["Utils","getShortDate","timestamp","distance","Math","round","Date","date","hour","getHours","slice","minutes","getMinutes","getNiceDate","defaultString","language","days","months","string","i","day","getDay","month","getMonth","year","getFullYear","hoursAgo","replace"],"mappings":"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","sourcesContent":["const Utils = {\n  getShortDate(timestamp) {\n    const distance = Math.round((+new Date() - timestamp) / 60000)\n    const date = new Date(timestamp)\n\n    const hour = (`0${date.getHours()}`).slice(-2)\n    const minutes = (`0${date.getMinutes()}`).slice(-2)\n\n    if (distance > 2879) {\n      if (distance > 14567) {\n        return this.getNiceDate(timestamp)\n      } else {\n        return `Yesterday at ${hour}:${minutes}`\n      }\n    } else {\n      return `at ${hour}:${minutes}`\n    }\n  },\n  getNiceDate(timestamp) {\n    const defaultString = '%d %f%y at %h:%i'\n\n    const language = {\n      0: 'less than a minute ago',\n      1: '1 minute ago',\n      59: '%distance minutes ago',\n      118: 'an hour ago',\n      1439: '%r hours ago',\n      2879: 'Yesterday at %h:%i',\n      14567: '%l at %h:%i',\n    }\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n    const date = new Date(timestamp)\n    const distance = Math.round((+new Date() - timestamp) / 60000)\n\n    let string\n    for (const i in language) {\n      if (distance < i) {\n        string = language[i]\n\n        break\n      }\n    }\n\n    const hour = (`0${date.getHours()}`).slice(-2)\n    const minutes = (`0${date.getMinutes()}`).slice(-2)\n    const day = days[date.getDay()]\n    const month = months[date.getMonth()]\n\n    let year = date.getFullYear()\n    if (new Date().getFullYear() === year) {\n      year = ''\n    }\n\n    if (string) {\n      const hoursAgo = Math.round(distance / 60)\n\n      return string.replace(/%distance/i, distance)\n        .replace(/%r/i, hoursAgo)\n        .replace(/%h/i, hour)\n        .replace(/%i/i, minutes)\n        .replace(/%l/i, day)\n    }\n\n    return defaultString.replace(/%d/i, day)\n      .replace(/%f/i, month)\n      .replace(/%y/i, year)\n      .replace(/%h/i, hour)\n      .replace(/%i/i, minutes)\n  },\n}\n\nexport default Utils\n"]},"metadata":{},"sourceType":"module"}