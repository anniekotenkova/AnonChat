{"ast":null,"code":"var BASE_URL = '/api/v1/channels';\nexport var FETCH_MESSAGES = 'FETCH_MESSAGES';\nexport var MESSAGE_POSTED = 'MESSAGE_POSTED';\nexport var CHANNEL_SELECTED = 'CHANNEL_SELECTED';\nexport function fetchMessages(channel) {\n  var url = \"\".concat(BASE_URL, \"/\").concat(channel, \"/messages\");\n  var promise = fetch(url, {\n    credentials: \"same-origin\"\n  }).then(function (r) {\n    return r.json();\n  });\n  return {\n    type: FETCH_MESSAGES,\n    payload: promise // Will be resolved by redux-promise\n\n  };\n}\nexport function createMessage(channel, content) {\n  var url = \"\".concat(BASE_URL, \"/\").concat(channel, \"/messages\");\n  var body = {\n    content: content\n  }; // ES6 destructuring\n\n  var csrfToken = document.querySelector('meta[name=\"csrf-token\"]').attributes.content.value;\n  var promise = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRF-Token': csrfToken\n    },\n    credentials: 'same-origin',\n    body: JSON.stringify(body)\n  }).then(function (r) {\n    return r.json();\n  });\n  return {\n    type: MESSAGE_POSTED,\n    payload: promise // Will be resolved by redux-promise\n\n  };\n}\nexport function selectChannel(channel) {\n  return {\n    type: CHANNEL_SELECTED\n  };\n}","map":{"version":3,"sources":["/Users/kotya/SMBD3/app/javascript/chat/actions/index.js"],"names":["BASE_URL","FETCH_MESSAGES","MESSAGE_POSTED","CHANNEL_SELECTED","fetchMessages","channel","url","promise","fetch","credentials","then","r","json","type","payload","createMessage","content","body","csrfToken","document","querySelector","attributes","value","method","headers","JSON","stringify","selectChannel"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,kBAAjB;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACrC,MAAMC,GAAG,aAAMN,QAAN,cAAkBK,OAAlB,cAAT;AACA,MAAME,OAAO,GAAGC,KAAK,CAACF,GAAD,EAAM;AAAEG,IAAAA,WAAW,EAAE;AAAf,GAAN,CAAL,CAA2CC,IAA3C,CAAgD,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjD,CAAhB;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAEZ,cADD;AAELa,IAAAA,OAAO,EAAEP,OAFJ,CAEY;;AAFZ,GAAP;AAID;AAED,OAAO,SAASQ,aAAT,CAAuBV,OAAvB,EAAgCW,OAAhC,EAAyC;AAC9C,MAAMV,GAAG,aAAMN,QAAN,cAAkBK,OAAlB,cAAT;AACA,MAAMY,IAAI,GAAG;AAAED,IAAAA,OAAO,EAAPA;AAAF,GAAb,CAF8C,CAEpB;;AAC1B,MAAME,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EAAkDC,UAAlD,CAA6DL,OAA7D,CAAqEM,KAAvF;AACA,MAAMf,OAAO,GAAGC,KAAK,CAACF,GAAD,EAAM;AACzBiB,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,sBAAgBN;AAHT,KAFgB;AAOzBT,IAAAA,WAAW,EAAE,aAPY;AAQzBQ,IAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeT,IAAf;AARmB,GAAN,CAAL,CASbP,IATa,CASR,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GATO,CAAhB;AAWA,SAAO;AACLC,IAAAA,IAAI,EAAEX,cADD;AAELY,IAAAA,OAAO,EAAEP,OAFJ,CAEY;;AAFZ,GAAP;AAID;AAED,OAAO,SAASoB,aAAT,CAAuBtB,OAAvB,EAAgC;AACrC,SAAO;AACLQ,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD","sourcesContent":["const BASE_URL = '/api/v1/channels';\n\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\nexport const MESSAGE_POSTED = 'MESSAGE_POSTED';\nexport const CHANNEL_SELECTED = 'CHANNEL_SELECTED';\n\nexport function fetchMessages(channel) {\n  const url = `${BASE_URL}/${channel}/messages`;\n  const promise = fetch(url, { credentials: \"same-origin\" }).then(r => r.json());\n\n  return {\n    type: FETCH_MESSAGES,\n    payload: promise // Will be resolved by redux-promise\n  };\n}\n\nexport function createMessage(channel, content) {\n  const url = `${BASE_URL}/${channel}/messages`;\n  const body = { content }; // ES6 destructuring\n  const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').attributes.content.value;\n  const promise = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRF-Token': csrfToken\n    },\n    credentials: 'same-origin',\n    body: JSON.stringify(body)\n  }).then(r => r.json());\n\n  return {\n    type: MESSAGE_POSTED,\n    payload: promise // Will be resolved by redux-promise\n  };\n}\n\nexport function selectChannel(channel) {\n  return {\n    type: CHANNEL_SELECTED,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}